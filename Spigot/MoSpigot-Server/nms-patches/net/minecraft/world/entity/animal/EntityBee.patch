--- a/net/minecraft/world/entity/animal/EntityBee.java
+++ b/net/minecraft/world/entity/animal/EntityBee.java
@@ -92,6 +92,12 @@
 import net.minecraft.world.level.storage.ValueOutput;
 import net.minecraft.world.phys.Vec3D;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityPotionEffectEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+// CraftBukkit end
+
 public class EntityBee extends EntityAnimal implements IEntityAngerable, EntityBird {
 
     public static final float FLAP_DEGREES_PER_TICK = 120.32113F;
@@ -202,9 +208,24 @@
 
     @Override
     protected void addAdditionalSaveData(ValueOutput valueoutput) {
+        // CraftBukkit start - selectively save data
+        addAdditionalSaveData(valueoutput, true);
+    }
+
+    @Override
+    protected void addAdditionalSaveData(ValueOutput valueoutput, boolean includeAll) {
+        // CraftBukkit end
         super.addAdditionalSaveData(valueoutput);
-        valueoutput.storeNullable("hive_pos", BlockPosition.CODEC, this.hivePos);
-        valueoutput.storeNullable("flower_pos", BlockPosition.CODEC, this.savedFlowerPos);
+        // CraftBukkit start - selectively save hive
+        if (includeAll) {
+            valueoutput.storeNullable("hive_pos", BlockPosition.CODEC, this.hivePos);
+        }
+        // CraftBukkit end
+        // CraftBukkit start - selectively save flower
+        if (includeAll) {
+            valueoutput.storeNullable("flower_pos", BlockPosition.CODEC, this.savedFlowerPos);
+        }
+        // CraftBukkit end
         valueoutput.putBoolean("HasNectar", this.hasNectar());
         valueoutput.putBoolean("HasStung", this.hasStung());
         valueoutput.putInt("TicksSincePollination", this.ticksWithoutNectarSinceExitingHive);
@@ -221,8 +242,8 @@
         this.ticksWithoutNectarSinceExitingHive = valueinput.getIntOr("TicksSincePollination", 0);
         this.stayOutOfHiveCountdown = valueinput.getIntOr("CannotEnterHiveTicks", 0);
         this.numCropsGrownSincePollination = valueinput.getIntOr("CropsGrownSincePollination", 0);
-        this.hivePos = (BlockPosition) valueinput.read("hive_pos", BlockPosition.CODEC).orElse((Object) null);
-        this.savedFlowerPos = (BlockPosition) valueinput.read("flower_pos", BlockPosition.CODEC).orElse((Object) null);
+        this.hivePos = (BlockPosition) valueinput.read("hive_pos", BlockPosition.CODEC).orElse(null); // CraftBukkit - decompile error
+        this.savedFlowerPos = (BlockPosition) valueinput.read("flower_pos", BlockPosition.CODEC).orElse(null); // CraftBukkit - decompile error
         this.readPersistentAngerSaveData(this.level(), valueinput);
     }
 
@@ -246,7 +267,7 @@
                 }
 
                 if (i > 0) {
-                    entityliving.addEffect(new MobEffect(MobEffects.POISON, i * 20, 0), this);
+                    entityliving.addEffect(new MobEffect(MobEffects.POISON, i * 20, 0), this, EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
                 }
             }
 
@@ -504,7 +525,7 @@
 
     @Nullable
     TileEntityBeehive getBeehiveBlockEntity() {
-        return this.hivePos == null ? null : (this.isTooFarAway(this.hivePos) ? null : (TileEntityBeehive) this.level().getBlockEntity(this.hivePos, TileEntityTypes.BEEHIVE).orElse((Object) null));
+        return this.hivePos == null ? null : (this.isTooFarAway(this.hivePos) ? null : (TileEntityBeehive) this.level().getBlockEntity(this.hivePos, TileEntityTypes.BEEHIVE).orElse(null)); // CraftBukkit - decompile error
     }
 
     boolean isHiveValid() {
@@ -669,8 +690,14 @@
         if (this.isInvulnerableTo(worldserver, damagesource)) {
             return false;
         } else {
+            // CraftBukkit start - Only stop pollinating if entity was damaged
+            boolean result = super.hurtServer(worldserver, damagesource, f);
+            if (!result) {
+                return result;
+            }
+            // CraftBukkit end
             this.beePollinateGoal.stopPollinating();
-            return super.hurtServer(worldserver, damagesource, f);
+            return result; // CraftBukkit
         }
     }
 
@@ -710,7 +737,7 @@
         @Override
         protected void alertOther(EntityInsentient entityinsentient, EntityLiving entityliving) {
             if (entityinsentient instanceof EntityBee && this.mob.hasLineOfSight(entityliving)) {
-                entityinsentient.setTarget(entityliving);
+                entityinsentient.setTarget(entityliving, EntityTargetEvent.TargetReason.TARGET_ATTACKED_ENTITY, true); // CraftBukkit - reason
             }
 
         }
@@ -719,7 +746,7 @@
     private static class c extends PathfinderGoalNearestAttackableTarget<EntityHuman> {
 
         c(EntityBee entitybee) {
-            Objects.requireNonNull(entitybee);
+            // Objects.requireNonNull(entitybee); // CraftBukkit - decompile error
             super(entitybee, EntityHuman.class, 10, true, false, entitybee::isAngryAt);
         }
 
@@ -1278,7 +1305,7 @@
                             }
                         }
 
-                        if (iblockdata1 != null) {
+                        if (iblockdata1 != null && CraftEventFactory.callEntityChangeBlockEvent(EntityBee.this, blockposition, iblockdata1)) { // CraftBukkit
                             EntityBee.this.level().levelEvent(2011, blockposition, 15);
                             EntityBee.this.level().setBlockAndUpdate(blockposition, iblockdata1);
                             EntityBee.this.incrementNumCropsGrownSincePollination();
