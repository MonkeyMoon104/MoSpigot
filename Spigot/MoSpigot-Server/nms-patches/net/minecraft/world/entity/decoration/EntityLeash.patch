--- a/net/minecraft/world/entity/decoration/EntityLeash.java
+++ b/net/minecraft/world/entity/decoration/EntityLeash.java
@@ -25,6 +25,13 @@
 import net.minecraft.world.phys.AxisAlignedBB;
 import net.minecraft.world.phys.Vec3D;
 
+// CraftBukkit start
+import net.minecraft.network.protocol.game.PacketPlayOutAttachEntity;
+import net.minecraft.server.level.EntityPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRemoveEvent;
+// CraftBukkit end
+
 public class EntityLeash extends BlockAttachedEntity {
 
     public static final double OFFSET_Y = 0.375D;
@@ -87,6 +94,15 @@
 
             for (Leashable leashable : Leashable.leashableLeashedTo(entityhuman)) {
                 if (leashable.canHaveALeashAttachedTo(this)) {
+                    // CraftBukkit start
+                    if (leashable instanceof Entity leashed) {
+                        if (CraftEventFactory.callPlayerLeashEntityEvent(leashed, this, entityhuman, enumhand).isCancelled()) {
+                            ((EntityPlayer) entityhuman).connection.send(new PacketPlayOutAttachEntity(leashed, leashable.getLeashHolder()));
+                            flag = true; // Also set true when the event is cancelled otherwise it tries to unleash the entities
+                            continue;
+                        }
+                    }
+                    // CraftBukkit end
                     leashable.setLeashedTo(this, true);
                     flag = true;
                 }
@@ -97,6 +113,18 @@
             if (!flag && !entityhuman.isSecondaryUseActive()) {
                 for (Leashable leashable1 : Leashable.leashableLeashedTo(this)) {
                     if (leashable1.canHaveALeashAttachedTo(entityhuman)) {
+                        // CraftBukkit start
+                        if (leashable1 instanceof Entity leashed) {
+                            if (CraftEventFactory.callPlayerUnleashEntityEvent(leashed, entityhuman, enumhand).isCancelled()) {
+                                continue;
+                            }
+                            if (CraftEventFactory.callPlayerLeashEntityEvent(leashed, this, entityhuman, enumhand).isCancelled()) {
+                                ((EntityPlayer) entityhuman).connection.send(new PacketPlayOutAttachEntity(leashed, leashable1.getLeashHolder()));
+                                flag1 = true; // Also set true when the event is cancelled otherwise it tries to unleash the entities
+                                continue;
+                            }
+                        }
+                        // CraftBukkit end
                         leashable1.setLeashedTo(entityhuman, true);
                         flag1 = true;
                     }
@@ -116,7 +144,7 @@
     @Override
     public void notifyLeasheeRemoved(Leashable leashable) {
         if (Leashable.leashableLeashedTo(this).isEmpty()) {
-            this.discard();
+            this.discard(EntityRemoveEvent.Cause.DROP); // CraftBukkit - add Bukkit remove cause
         }
 
     }
