--- a/net/minecraft/world/entity/animal/EntityAnimal.java
+++ b/net/minecraft/world/entity/animal/EntityAnimal.java
@@ -36,6 +36,13 @@
 import net.minecraft.world.level.storage.ValueInput;
 import net.minecraft.world.level.storage.ValueOutput;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityBreedEvent;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityEnterLoveModeEvent;
+// CraftBukkit end
+
 public abstract class EntityAnimal extends EntityAgeable {
 
     protected static final int PARENT_AGE_AFTER_BREEDING = 6000;
@@ -43,6 +50,7 @@
     public int inLove = 0;
     @Nullable
     public EntityReference<EntityPlayer> loveCause;
+    public ItemStack breedItem; // CraftBukkit - Add breedItem variable
 
     protected EntityAnimal(EntityTypes<? extends EntityAnimal> entitytypes, World world) {
         super(entitytypes, world);
@@ -84,9 +92,15 @@
     }
 
     @Override
-    protected void actuallyHurt(WorldServer worldserver, DamageSource damagesource, float f) {
+    // CraftBukkit start - void -> boolean
+    public boolean actuallyHurt(WorldServer worldserver, DamageSource damagesource, float f, EntityDamageEvent event) {
+        boolean damageResult = super.actuallyHurt(worldserver, damagesource, f, event);
+        if (!damageResult) {
+            return false;
+        }
         this.resetLove();
-        super.actuallyHurt(worldserver, damagesource, f);
+        return true;
+        // CraftBukkit end
     }
 
     @Override
@@ -191,10 +205,17 @@
     }
 
     public void setInLove(@Nullable EntityHuman entityhuman) {
-        this.inLove = 600;
+        // CraftBukkit start
+        EntityEnterLoveModeEvent entityEnterLoveModeEvent = CraftEventFactory.callEntityEnterLoveModeEvent(entityhuman, this, 600);
+        if (entityEnterLoveModeEvent.isCancelled()) {
+            return;
+        }
+        this.inLove = entityEnterLoveModeEvent.getTicksInLove();
+        // CraftBukkit end
         if (entityhuman instanceof EntityPlayer entityplayer) {
             this.loveCause = new EntityReference<EntityPlayer>(entityplayer);
         }
+        this.breedItem = entityhuman.getInventory().getSelectedItem(); // CraftBukkit
 
         this.level().broadcastEntityEvent(this, (byte) 18);
     }
@@ -213,7 +234,7 @@
         World world = this.level();
 
         Objects.requireNonNull(world);
-        return (EntityPlayer) EntityReference.get(entityreference, world::getPlayerByUUID, EntityPlayer.class);
+        return (EntityPlayer) EntityReference.get(entityreference, (uuid) -> (EntityPlayer) world.getPlayerByUUID(uuid), EntityPlayer.class); // CraftBukkit - decompile error
     }
 
     public boolean isInLove() {
@@ -234,12 +255,29 @@
         if (entityageable != null) {
             entityageable.setBaby(true);
             entityageable.snapTo(this.getX(), this.getY(), this.getZ(), 0.0F, 0.0F);
-            this.finalizeSpawnChildFromBreeding(worldserver, entityanimal, entityageable);
-            worldserver.addFreshEntityWithPassengers(entityageable);
+            // CraftBukkit start - call EntityBreedEvent
+            EntityPlayer breeder = Optional.ofNullable(this.getLoveCause()).or(() -> {
+                return Optional.ofNullable(entityanimal.getLoveCause());
+            }).orElse(null);
+            int experience = this.getRandom().nextInt(7) + 1;
+            EntityBreedEvent entityBreedEvent = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityBreedEvent(entityageable, this, entityanimal, breeder, this.breedItem, experience);
+            if (entityBreedEvent.isCancelled()) {
+                return;
+            }
+            experience = entityBreedEvent.getExperience();
+            this.finalizeSpawnChildFromBreeding(worldserver, entityanimal, entityageable, experience);
+            worldserver.addFreshEntityWithPassengers(entityageable, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BREEDING);
+            // CraftBukkit end
         }
     }
 
     public void finalizeSpawnChildFromBreeding(WorldServer worldserver, EntityAnimal entityanimal, @Nullable EntityAgeable entityageable) {
+        // CraftBukkit start
+        this.finalizeSpawnChildFromBreeding(worldserver, entityanimal, entityageable, this.getRandom().nextInt(7) + 1);
+    }
+
+    public void finalizeSpawnChildFromBreeding(WorldServer worldserver, EntityAnimal entityanimal, @Nullable EntityAgeable entityageable, int experience) {
+        // CraftBukkit end
         Optional.ofNullable(this.getLoveCause()).or(() -> {
             return Optional.ofNullable(entityanimal.getLoveCause());
         }).ifPresent((entityplayer) -> {
@@ -252,7 +290,11 @@
         entityanimal.resetLove();
         worldserver.broadcastEntityEvent(this, (byte) 18);
         if (worldserver.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) {
-            worldserver.addFreshEntity(new EntityExperienceOrb(worldserver, this.getX(), this.getY(), this.getZ(), this.getRandom().nextInt(7) + 1));
+            // CraftBukkit start - use event experience
+            if (experience > 0) {
+                worldserver.addFreshEntity(new EntityExperienceOrb(worldserver, this.getX(), this.getY(), this.getZ(), experience));
+            }
+            // CraftBukkit end
         }
 
     }
