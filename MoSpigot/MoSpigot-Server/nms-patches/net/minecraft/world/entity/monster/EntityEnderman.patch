--- a/net/minecraft/world/entity/monster/EntityEnderman.java
+++ b/net/minecraft/world/entity/monster/EntityEnderman.java
@@ -65,6 +65,11 @@
 import net.minecraft.world.phys.MovingObjectPositionBlock;
 import net.minecraft.world.phys.Vec3D;
 
+// CraftBukkit start;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+// CraftBukkit end
+
 public class EntityEnderman extends EntityMonster implements IEntityAngerable {
 
     private static final MinecraftKey SPEED_MODIFIER_ATTACKING_ID = MinecraftKey.withDefaultNamespace("attacking");
@@ -108,7 +113,17 @@
 
     @Override
     public void setTarget(@Nullable EntityLiving entityliving) {
-        super.setTarget(entityliving);
+        // CraftBukkit start - fire event
+        setTarget(entityliving, EntityTargetEvent.TargetReason.UNKNOWN, true);
+    }
+
+    @Override
+    public boolean setTarget(EntityLiving entityliving, EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+        if (!super.setTarget(entityliving, reason, fireEvent)) {
+            return false;
+        }
+        entityliving = getTarget();
+        // CraftBukkit end
         AttributeModifiable attributemodifiable = this.getAttribute(GenericAttributes.MOVEMENT_SPEED);
 
         if (entityliving == null) {
@@ -123,6 +138,7 @@
                 attributemodifiable.addTransientModifier(EntityEnderman.SPEED_MODIFIER_ATTACKING);
             }
         }
+        return true;
 
     }
 
@@ -196,7 +212,7 @@
         super.readAdditionalSaveData(valueinput);
         this.setCarriedBlock((IBlockData) valueinput.read("carriedBlockState", IBlockData.CODEC).filter((iblockdata) -> {
             return !iblockdata.isAir();
-        }).orElse((Object) null));
+        }).orElse(null)); // CraftBukkit - decompile error
         this.readPersistentAngerSaveData(this.level(), valueinput);
     }
 
@@ -557,9 +573,11 @@
             if (iblockdata2 != null) {
                 iblockdata2 = Block.updateFromNeighbourShapes(iblockdata2, this.enderman.level(), blockposition);
                 if (this.canPlaceBlock(world, blockposition, iblockdata2, iblockdata, iblockdata1, blockposition1)) {
+                    if (CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockposition, iblockdata2)) { // CraftBukkit - Place event
                     world.setBlock(blockposition, iblockdata2, 3);
                     world.gameEvent(GameEvent.BLOCK_PLACE, blockposition, GameEvent.a.of(this.enderman, iblockdata2));
                     this.enderman.setCarriedBlock((IBlockData) null);
+                    } // CraftBukkit
                 }
 
             }
@@ -598,9 +616,11 @@
             boolean flag = movingobjectpositionblock.getBlockPos().equals(blockposition);
 
             if (iblockdata.is(TagsBlock.ENDERMAN_HOLDABLE) && flag) {
+                if (CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockposition, Blocks.AIR.defaultBlockState())) { // CraftBukkit - Place event
                 world.removeBlock(blockposition, false);
                 world.gameEvent(GameEvent.BLOCK_DESTROY, blockposition, GameEvent.a.of(this.enderman, iblockdata));
                 this.enderman.setCarriedBlock(iblockdata.getBlock().defaultBlockState());
+                } // CraftBukkit
             }
 
         }
